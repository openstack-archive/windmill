# Copyright 2018 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
---
- name: Install nodepool
  hosts: nodepool
  # TODO(pabelanger): We really don't want to use serial here, but this allows
  # us to still support a single node install.  What we should do here is expose
  # some sort of variable to only toggle this when we are doing a single node
  # install. Otherwise, we just slow down multinode deployments.
  serial: 1

  tasks:
    # NOTE(pabelanger): Because of ordering issues create the required home
    # directory first.
    - name: Create nodepool user directories.
      include_role:
        name: openstack.nodepool
      vars:
        nodepool_task_manager:
          - pre

    # TODO(pabelanger): This should be moved into ansible-role-os-client-config.
    - name: Create os-client-config directories.
      become: yes
      file:
        group: nodepool
        owner: nodepool
        path: /var/lib/nodepool/.config/openstack
        state: directory

    # NOTE(AGoncharov): check presence of os-client-config templates
    # before trying to deploy them
    - name: Check presence of os-client-config templates
      local_action: stat path="{{ windmill_config_git_dest }}/nodepool/{{item}}.j2"
      with_items:
        - clouds.yaml
        - secure.yaml
      register: templates_stat

    - name: Deploy os-client-config templates
      become: yes
      template:
        dest: "/var/lib/nodepool/.config/openstack/{{ item.item }}"
        group: nodepool
        mode: 0600
        owner: nodepool
        src: "{{ item.stat.path }}"
      with_items: "{{templates_stat.results}}"
      when: item.stat | default(false) and item.stat.exists
